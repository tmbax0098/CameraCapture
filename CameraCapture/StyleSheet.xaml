<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CameraCapture">


    <SolidColorBrush x:Key="BorderColor" Color="Gray" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="DisableColor" Color="#888" />


    <SolidColorBrush x:Key="PrimaryColor" Color="#AFFF2E00" />

    <ControlTemplate x:Key="Button_Rectanlge" TargetType="{x:Type Button}">
        <Border x:Name="border" Background="{TemplateBinding Control.Background}" CornerRadius="0"
            RenderTransformOrigin="0.5,0.5" Cursor="Hand">
            <UIElement.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </UIElement.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="0" CornerRadius="{Binding CornerRadius, ElementName=border}" Background="White">
                <TextBlock HorizontalAlignment="Center" Height="Auto" Margin="0" TextWrapping="Wrap"
                   Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center" FontWeight="Bold"
                   FontSize="{TemplateBinding Control.FontSize}">

                </TextBlock>
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="Button_Rounded" TargetType="{x:Type Button}">
        <Border x:Name="border" Background="{TemplateBinding Control.Background}" CornerRadius="5"
            RenderTransformOrigin="0.5,0.5" Cursor="Hand">
            <UIElement.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </UIElement.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="0" CornerRadius="{Binding CornerRadius, ElementName=border}" Background="White">
                <TextBlock HorizontalAlignment="Center" Height="Auto" Margin="0" TextWrapping="Wrap"
                   Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center" FontWeight="Bold"
                   FontSize="{TemplateBinding Control.FontSize}">

                </TextBlock>
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="CirclePicButton" TargetType="{x:Type Button}">
        <Grid x:Name="grid" Margin="0,0,2,2" Cursor="Hand" RenderTransformOrigin="0.5,0.5" Background="#00000000">
            <UIElement.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </UIElement.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="38*"/>
                <ColumnDefinition Width="87*"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             Storyboard.TargetName="grid">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             Storyboard.TargetName="grid">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="ellipse" Fill="{TemplateBinding Control.Background}" HorizontalAlignment="Center"
               VerticalAlignment="Center" Width="60" Height="60" Stroke="{x:Null}"/>
            <Ellipse x:Name="ellipse_Copy" HorizontalAlignment="Center" VerticalAlignment="Center" Width="60"
               Height="60" Margin="0" Stroke="{x:Null}">
                <Shape.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#19FFFFFF" Offset="1"/>
                        <GradientStop Color="#19F3F3F3"/>
                        <GradientStop Color="#19000000" Offset="0.485"/>
                    </LinearGradientBrush>
                </Shape.Fill>
            </Ellipse>
            <TextBlock Grid.Column="1" HorizontalAlignment="Left" Height="Auto" Margin="15,0,0,0" TextWrapping="Wrap"
                 Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center" Foreground="White"/>
            <Border x:Name="border" CornerRadius="30" BorderThickness="1" Grid.ColumnSpan="2" Visibility="Collapsed"
              Cursor="Hand">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#99000000" Offset="1"/>
                        <GradientStop Color="#99FFFFFF"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#33FFFFFF" Offset="0"/>
                        <GradientStop Color="#19FFFFFF" Offset="0.504"/>
                        <GradientStop Color="#33000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="CircleButton2" TargetType="{x:Type Button}">
        <Grid x:Name="grid" Margin="0,0,2,2" Cursor="Hand" RenderTransformOrigin="0.5,0.5" Background="#00000000">
            <UIElement.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </UIElement.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="38*"/>
                <ColumnDefinition Width="87*"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             Storyboard.TargetName="grid">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             Storyboard.TargetName="grid">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="ellipse" Fill="{TemplateBinding Control.Background}" HorizontalAlignment="Stretch"
               VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="2" Stroke="{x:Null}"/>
            <Ellipse x:Name="ellipse_Copy" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
               Height="Auto" Margin="2" Opacity="0" Stroke="{x:Null}">
                <Shape.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#19FFFFFF" Offset="1"/>
                        <GradientStop Color="#19F3F3F3"/>
                        <GradientStop Color="#19000000" Offset="0.485"/>
                    </LinearGradientBrush>
                </Shape.Fill>
            </Ellipse>
            <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" Height="Auto" Margin="3,0,0,0" TextWrapping="Wrap"
                 Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                 Foreground="{TemplateBinding Control.Foreground}">
        <UIElement.Effect>
          <DropShadowEffect ShadowDepth="1" BlurRadius="1" Direction="214" Color="White" RenderingBias="Quality"/>
        </UIElement.Effect>
            </TextBlock>
            <Border x:Name="border" CornerRadius="0" BorderThickness="0,1" Grid.ColumnSpan="2" Visibility="Collapsed"
              Cursor="Hand" Opacity="0">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#995B5B5B" Offset="1"/>
                        <GradientStop Color="#99FFFFFF"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#33FFFFFF" Offset="0"/>
                        <GradientStop Color="#19FFFFFF" Offset="0.504"/>
                        <GradientStop Color="#33000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="Button_Glass_SaveQ" TargetType="{x:Type Button}">
        <Border x:Name="border" Background="{TemplateBinding Control.Background}" CornerRadius="0"
            RenderTransformOrigin="0.5,0.5" Cursor="Hand">
            <UIElement.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </UIElement.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             Storyboard.TargetName="border">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.9"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Border Margin="0" CornerRadius="{Binding CornerRadius, ElementName=border}">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#7FFFFFFF" Offset="0"/>
                            <GradientStop Color="#66000000" Offset="1"/>
                            <GradientStop Color="#33FFFFFF" Offset="0.277"/>
                            <GradientStop Color="#4CFFFFFF" Offset="0.269"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <TextBlock HorizontalAlignment="Center" Height="Auto" Margin="0" TextWrapping="Wrap"
                     Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center" FontWeight="Bold"
                     FontFamily="/TestBench;component/Attachment/Fonts/#Calibri"
                     FontSize="{TemplateBinding Control.FontSize}">
            <UIElement.Effect>
              <DropShadowEffect ShadowDepth="2" RenderingBias="Quality" Color="White"/>
            </UIElement.Effect>
                    </TextBlock>
                </Border>
                <Border BorderThickness="1" HorizontalAlignment="Right" Height="27" Margin="0,1,3,0"
                VerticalAlignment="Center" Width="27" CornerRadius="15000">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF91C93A" Offset="0"/>
                            <GradientStop Color="#FF1F3200" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <TextBlock HorizontalAlignment="Center" Height="Auto" Margin="0,0,0,2" TextWrapping="Wrap"
                     Text="{TemplateBinding FrameworkElement.Tag}" VerticalAlignment="Center"
                     FontFamily="/TestBench;component/Attachment/Fonts/#Calibri" Foreground="#E5FFFFFF"
                     FontSize="17.333" FontWeight="Bold"/>
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="Button_Circle" TargetType="{x:Type Button}">
        <Grid>
            <Ellipse Fill="{TemplateBinding Control.Background}" StrokeThickness="2"/>
            <ContentPresenter Content="{TemplateBinding Content}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="8">
                        <Ellipse
                    Name="r1"
                    Stroke="Black"
                    StrokeDashArray="2 2"
                    StrokeThickness="1"/>
                        <Border
                    Name="border"
                    Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}"
                    BorderThickness="1"
                    CornerRadius="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CircleButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
        <Setter Property="Background" Value="#FF6DB4EF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}"/>
                        <Ellipse>
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="#00000000"/>
                                    <GradientStop Offset="0.88" Color="#00000000"/>
                                    <GradientStop Offset="1" Color="#80000000"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Margin="10" x:Name="highlightCircle" >
                            <Ellipse.Fill >
                                <LinearGradientBrush >
                                    <GradientStop Offset="0" Color="#50FFFFFF"/>
                                    <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                    <GradientStop Offset="1" Color="#50FFFFFF"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="#50FFFFFF"/>
                                        <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                        <GradientStop Offset="1" Color="#50FFFFFF"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="0.5" X="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="PaintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Name="border" CornerRadius="1"
                                BorderThickness="1"
                                Background="Transparent"
                                BorderBrush="#AFFF2E00"
                                Padding="2">
                            <ContentPresenter Content="{TemplateBinding Button.Content}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Padding" TargetName="border" Value="1"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter Property="Padding" TargetName="border" Value="5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="ImageButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Name="border"
                                Padding="2">
                            <ContentPresenter Content="{TemplateBinding Button.Content}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Padding" TargetName="border" Value="1"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter Property="Padding" TargetName="border" Value="5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            CornerRadius="1"
                            BorderBrush="{StaticResource BorderColor}" 
                            BorderThickness="1"
                            Background="{StaticResource ComboBoxNormalBackgroundBrush}" 
>
                        <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#909090"/>
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="Blue" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="TextBoxCenter">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            CornerRadius="1"
                            BorderBrush="{StaticResource BorderColor}" 
                            BorderThickness="1"
                            Background="{StaticResource ComboBoxNormalBackgroundBrush}" 
>
                        <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#909090"/>
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="Blue" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            CornerRadius="1"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            Background="#fff"
>
                        <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryColor}"/>
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="Blue" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="TextBlockRight">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="TextBlockLeft">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>
    <!-- Flat ComboBox -->
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource BorderColor}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource DisableColor}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center" 
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" CornerRadius="1"/>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource BorderColor}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of Flat ComboBox -->
    <Style TargetType="Border" x:Key="ColorBorderStyle">
        <Setter Property="BorderThickness" Value="0,5,0,0"/>
        <Setter Property="BorderBrush" Value="#FF2F3542"/>
    </Style>
    <Style TargetType="Border" x:Key="BorderBottom">
        <Setter Property="BorderThickness" Value="0,0,0,5"/>
        <Setter Property="BorderBrush" Value="#FF2F3542"/>
    </Style>
    <Style TargetType="Border" x:Key="BorderCadr">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="CornerRadius" Value="1"/>
        <Setter Property="Margin" Value="2"/>
    </Style>


    <Style x:Key="windowStyle" TargetType="Window">
        <Setter Property="Background"  Value="#FF1D1D1D"/>
    </Style>
    
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Top" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style TargetType="TabItem">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="Pink"/>
        <Setter Property="BorderThickness" Value="10"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="0"
                        BorderBrush="#FF707070" Margin="0" CornerRadius="0" Padding="40,15,40,15">
                        <ContentPresenter ContentSource="Header" Margin="0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#E64A19" />
                            <Setter Property="Foreground" Value="#fff"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="Foreground" Value="#fff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Border" x:Key="border_title">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#7FFF2E00" Offset="0"/>
                    <GradientStop Color="#7FFF2E00" Offset="1"/>
                    <GradientStop Color="#AFFF2E00" Offset="0.443"/>
                    <GradientStop Color="#AFFF2E00" Offset="0.57"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ProgressBarBorderBrush"
                     EndPoint="0,1"
                     StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#B2B2B2"
                      Offset="0"/>
            <GradientStop Color="#8C8C8C"
                      Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarBackground"
                     EndPoint="1,0"
                     StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#BABABA"
                      Offset="0"/>
            <GradientStop Color="#C7C7C7"
                      Offset="0.5"/>
            <GradientStop Color="#BABABA"
                      Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarTopHighlight"
                     StartPoint="0,0"
                     EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#80FFFFFF"
                      Offset="0.05"/>
            <GradientStop Color="#00FFFFFF"
                      Offset="0.25"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight"
                     StartPoint="0,0"
                     EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFFFFF"
                      Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                      Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight"
                     StartPoint="0,0"
                     EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#90FFFFFF"
                      Offset="0.5385"/>
            <GradientStop Color="#00FFFFFF"
                      Offset="0.5385"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft"
                     RadiusX="1"
                     RadiusY="1"
                     RelativeTransform="1,0,0,1,0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                      Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                      Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect"
                     StartPoint="0,1"
                     EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                      Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                      Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight"
                     RadiusX="1"
                     RadiusY="1"
                     RelativeTransform="1,0,0,1,-0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                      Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                      Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#0C000000"
                      Offset="0"/>
            <GradientStop Color="#20000000"
                      Offset="0.3"/>
            <GradientStop Color="#00000000"
                      Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                      Offset="0"/>
            <GradientStop Color="#20000000"
                      Offset="0.7"/>
            <GradientStop Color="#0C000000"
                      Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" 
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00FFFFFF"
                      Offset="0"/>
            <GradientStop Color="#60FFFFFF"
                      Offset="0.4"/>
            <GradientStop Color="#60FFFFFF"
                      Offset="0.6"/>
            <GradientStop Color="#00FFFFFF"
                      Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground"
            Value="#01D328"/>
        <Setter Property="Background"
            Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush"
            Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness"
            Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Name="TemplateRoot"
                      SnapsToDevicePixels="true">
                        <Rectangle Fill="{TemplateBinding Background}"
                               RadiusX="2"
                               RadiusY="2"/>
                        <Border Background="{StaticResource ProgressBarGlassyHighlight}"
                            Margin="1"
                            CornerRadius="2"/>
                        <Border BorderBrush="#80FFFFFF"
                            Background="{StaticResource ProgressBarTopHighlight}"
                            BorderThickness="1,0,1,1"
                            Margin="1"/>
                        <Rectangle Name="PART_Track"
                               Margin="1"/>

                        <Decorator x:Name="PART_Indicator"
                               HorizontalAlignment="Left"
                               Margin="1">
                            <Grid Name="Foreground">
                                <Rectangle x:Name="Indicator"
                                       Fill="{TemplateBinding Foreground}"/>
                                <Grid x:Name="Animation" ClipToBounds="true">
                                    <Rectangle x:Name="PART_GlowRect" Width="100" 
                                            Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"
                                            Margin="-100,0,0,0"
                                            HorizontalAlignment="Left">
                                    </Rectangle>
                                </Grid>
                                <Grid x:Name="Overlay">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="15"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition MaxWidth="15"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="LeftDark"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Margin="1,1,0,1"/>
                                    <Rectangle x:Name="RightDark"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}"
                                           Margin="0,1,1,1"/>
                                    <Rectangle x:Name="LeftLight"
                                           Grid.Column="0"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}"/>
                                    <Rectangle x:Name="CenterLight"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffect}"/>
                                    <Rectangle x:Name="RightLight"
                                           Grid.Column="2"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}"/>
                                    <Border x:Name="Highlight1"
                                        Grid.RowSpan="2"
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarIndicatorGlassyHighlight}"/>
                                    <Border x:Name="Highlight2"
                                        Grid.RowSpan="2" 
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ProgressBarTopHighlight}"/>
                                </Grid>
                            </Grid>
                        </Decorator>

                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                             Value="Vertical">
                            <Setter TargetName="TemplateRoot"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsIndeterminate"
                             Value="true">
                            <Setter TargetName="LeftDark"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="RightDark"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="LeftLight"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="CenterLight"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="RightLight"
                                Property="Visibility"
                                Value="Collapsed"/>
                            <Setter TargetName="Indicator"
                                Property="Visibility"
                                Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate"
                             Value="false">
                            <Setter TargetName="Animation"
                                Property="Background"
                                Value="#80B5FFA9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Grid" x:Key="style_gradiant">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#7FFF2E00" Offset="0"/>
                    <GradientStop Color="#7FFF2E00" Offset="1"/>
                    <GradientStop Color="#AFFF2E00" Offset="0.443"/>
                    <GradientStop Color="#AFFF2E00" Offset="0.57"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF6B8E95" Offset="0"/>
        <GradientStop Color="#FF14A7C1" Offset="1"/>
        <GradientStop Color="#FF1E424E" Offset="0.509"/>
        <GradientStop Color="#FF1D4855" Offset="0.542"/>
        <GradientStop Color="#FF1D4855" Offset="0.542"/>
        <GradientStop Color="#FF193A44" Offset="0.526"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF1D1D1D" Offset="0.614"/>
        <GradientStop Color="#FF007F96" Offset="0.853"/>
        <GradientStop Color="#FF0AEAFA" Offset="1"/>
    </LinearGradientBrush>

    <Style TargetType="DataGridColumnHeader">
        <!--<Setter Property="Background" Value="{StaticResource HeaderBrush}" />-->
        <Setter Property="Background" Value="#E64A19" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="#FF444444" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#eee"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="ContextMenu" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#FFD0D0E0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffc77d"/>
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FF7043" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True" >
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="FontSize" Value="12" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--<Style TargetType="Label">
        <Setter Property="Foreground" Value="#FFE60B0B"/>
    </Style>-->

</ResourceDictionary>